# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'launchApplication.ui'
#
# Created by: PyQt5 UI code generator 5.11.3
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(859, 665)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.tabWidget = CustomTab(self.centralwidget)
        self.tabWidget.setTabsClosable(True)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.tab)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.widget_2 = EditorWidget(self.tab)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_4.addWidget(self.widget_2, 0, 0, 1, 1)
        self.tabWidget.addTab(self.tab, "")
        self.gridLayout_3.addWidget(self.tabWidget, 0, 0, 1, 1)
        self.findReplaceWidget = QtWidgets.QDockWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.findReplaceWidget.sizePolicy().hasHeightForWidth())
        self.findReplaceWidget.setSizePolicy(sizePolicy)
        self.findReplaceWidget.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea)
        self.findReplaceWidget.setObjectName("findReplaceWidget")
        self.dockWidgetContents_3 = QtWidgets.QWidget()
        self.dockWidgetContents_3.setObjectName("dockWidgetContents_3")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.dockWidgetContents_3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.findValue = QtWidgets.QLineEdit(self.dockWidgetContents_3)
        self.findValue.setObjectName("findValue")
        self.gridLayout_2.addWidget(self.findValue, 0, 0, 1, 1)
        self.findButton = QtWidgets.QToolButton(self.dockWidgetContents_3)
        self.findButton.setObjectName("findButton")
        self.gridLayout_2.addWidget(self.findButton, 0, 1, 1, 1)
        self.findAllButton = QtWidgets.QToolButton(self.dockWidgetContents_3)
        self.findAllButton.setObjectName("findAllButton")
        self.gridLayout_2.addWidget(self.findAllButton, 0, 2, 1, 1)
        self.replaceValue = QtWidgets.QLineEdit(self.dockWidgetContents_3)
        self.replaceValue.setObjectName("replaceValue")
        self.gridLayout_2.addWidget(self.replaceValue, 1, 0, 1, 1)
        self.replaceButton = QtWidgets.QToolButton(self.dockWidgetContents_3)
        self.replaceButton.setObjectName("replaceButton")
        self.gridLayout_2.addWidget(self.replaceButton, 1, 1, 1, 1)
        self.replaceAllButton = QtWidgets.QToolButton(self.dockWidgetContents_3)
        self.replaceAllButton.setObjectName("replaceAllButton")
        self.gridLayout_2.addWidget(self.replaceAllButton, 1, 2, 1, 1)
        self.findReplaceWidget.setWidget(self.dockWidgetContents_3)
        self.gridLayout_3.addWidget(self.findReplaceWidget, 1, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 859, 31))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuFind = QtWidgets.QMenu(self.menubar)
        self.menuFind.setObjectName("menuFind")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.directoryTreeDockWidget = QtWidgets.QDockWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.directoryTreeDockWidget.sizePolicy().hasHeightForWidth())
        self.directoryTreeDockWidget.setSizePolicy(sizePolicy)
        self.directoryTreeDockWidget.setMinimumSize(QtCore.QSize(324, 297))
        self.directoryTreeDockWidget.setObjectName("directoryTreeDockWidget")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.gridLayout = QtWidgets.QGridLayout(self.dockWidgetContents)
        self.gridLayout.setObjectName("gridLayout")
        self.treeView = DirectoryTree(self.dockWidgetContents)
        self.treeView.setObjectName("treeView")
        self.gridLayout.addWidget(self.treeView, 0, 0, 1, 1)
        self.directoryTreeDockWidget.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.directoryTreeDockWidget)
        self.interpreterDockWidget = QtWidgets.QDockWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.interpreterDockWidget.sizePolicy().hasHeightForWidth())
        self.interpreterDockWidget.setSizePolicy(sizePolicy)
        self.interpreterDockWidget.setMinimumSize(QtCore.QSize(105, 150))
        self.interpreterDockWidget.setObjectName("interpreterDockWidget")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.widget = EmbedIPython(self.dockWidgetContents_2)
        self.widget.setGeometry(QtCore.QRect(13, 13, 774, 91))
        self.widget.setObjectName("widget")
        self.interpreterDockWidget.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(8), self.interpreterDockWidget)
        self.actionCtrl_N = QtWidgets.QAction(MainWindow)
        self.actionCtrl_N.setObjectName("actionCtrl_N")
        self.actionNew_Ctrl_N = QtWidgets.QAction(MainWindow)
        self.actionNew_Ctrl_N.setObjectName("actionNew_Ctrl_N")
        self.actionOpen_Ctrl_O = QtWidgets.QAction(MainWindow)
        self.actionOpen_Ctrl_O.setObjectName("actionOpen_Ctrl_O")
        self.actionExit_Alt_F4 = QtWidgets.QAction(MainWindow)
        self.actionExit_Alt_F4.setObjectName("actionExit_Alt_F4")
        self.actionClose_Tab_Ctrl_W = QtWidgets.QAction(MainWindow)
        self.actionClose_Tab_Ctrl_W.setObjectName("actionClose_Tab_Ctrl_W")
        self.actionClose_All_Tab = QtWidgets.QAction(MainWindow)
        self.actionClose_All_Tab.setObjectName("actionClose_All_Tab")
        self.actionSave_Ctrl_S = QtWidgets.QAction(MainWindow)
        self.actionSave_Ctrl_S.setObjectName("actionSave_Ctrl_S")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionRecent = QtWidgets.QAction(MainWindow)
        self.actionRecent.setObjectName("actionRecent")
        self.actionCut_Ctrl_X = QtWidgets.QAction(MainWindow)
        self.actionCut_Ctrl_X.setObjectName("actionCut_Ctrl_X")
        self.actionCopy_Ctrl_C = QtWidgets.QAction(MainWindow)
        self.actionCopy_Ctrl_C.setObjectName("actionCopy_Ctrl_C")
        self.actionPaste_Ctrl_V = QtWidgets.QAction(MainWindow)
        self.actionPaste_Ctrl_V.setObjectName("actionPaste_Ctrl_V")
        self.actionUndo_Ctrl_Z = QtWidgets.QAction(MainWindow)
        self.actionUndo_Ctrl_Z.setObjectName("actionUndo_Ctrl_Z")
        self.actionRedo_Ctrl_Y = QtWidgets.QAction(MainWindow)
        self.actionRedo_Ctrl_Y.setObjectName("actionRedo_Ctrl_Y")
        self.actionIndent = QtWidgets.QAction(MainWindow)
        self.actionIndent.setObjectName("actionIndent")
        self.actionUnIndent_Shift_Tab = QtWidgets.QAction(MainWindow)
        self.actionUnIndent_Shift_Tab.setObjectName("actionUnIndent_Shift_Tab")
        self.actionLine_Cut = QtWidgets.QAction(MainWindow)
        self.actionLine_Cut.setObjectName("actionLine_Cut")
        self.actionLine_Copy = QtWidgets.QAction(MainWindow)
        self.actionLine_Copy.setObjectName("actionLine_Copy")
        self.actionLine_Paste = QtWidgets.QAction(MainWindow)
        self.actionLine_Paste.setObjectName("actionLine_Paste")
        self.actionLine_Duplicate = QtWidgets.QAction(MainWindow)
        self.actionLine_Duplicate.setObjectName("actionLine_Duplicate")
        self.actionLine_Transpose = QtWidgets.QAction(MainWindow)
        self.actionLine_Transpose.setObjectName("actionLine_Transpose")
        self.actionComment_Uncomment_Ctrl = QtWidgets.QAction(MainWindow)
        self.actionComment_Uncomment_Ctrl.setObjectName("actionComment_Uncomment_Ctrl")
        self.actionGoto_Line_Ctrl_G = QtWidgets.QAction(MainWindow)
        self.actionGoto_Line_Ctrl_G.setObjectName("actionGoto_Line_Ctrl_G")
        self.actionHighlight_Ctrl_M = QtWidgets.QAction(MainWindow)
        self.actionHighlight_Ctrl_M.setObjectName("actionHighlight_Ctrl_M")
        self.actionUpperCase_Alt_U = QtWidgets.QAction(MainWindow)
        self.actionUpperCase_Alt_U.setObjectName("actionUpperCase_Alt_U")
        self.actionLowerCase_Alt_L = QtWidgets.QAction(MainWindow)
        self.actionLowerCase_Alt_L.setObjectName("actionLowerCase_Alt_L")
        self.actionCamelCase_Alt_C = QtWidgets.QAction(MainWindow)
        self.actionCamelCase_Alt_C.setObjectName("actionCamelCase_Alt_C")
        self.actionFind = QtWidgets.QAction(MainWindow)
        self.actionFind.setObjectName("actionFind")
        self.actionFind_All_Ctrl_Shift_F = QtWidgets.QAction(MainWindow)
        self.actionFind_All_Ctrl_Shift_F.setObjectName("actionFind_All_Ctrl_Shift_F")
        self.actionReplace_Ctrl_R = QtWidgets.QAction(MainWindow)
        self.actionReplace_Ctrl_R.setObjectName("actionReplace_Ctrl_R")
        self.actionReplace_All_Ctrl_Shift_R = QtWidgets.QAction(MainWindow)
        self.actionReplace_All_Ctrl_Shift_R.setObjectName("actionReplace_All_Ctrl_Shift_R")
        self.menuFile.addAction(self.actionNew_Ctrl_N)
        self.menuFile.addAction(self.actionOpen_Ctrl_O)
        self.menuFile.addAction(self.actionRecent)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_Ctrl_S)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClose_Tab_Ctrl_W)
        self.menuFile.addAction(self.actionClose_All_Tab)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit_Alt_F4)
        self.menuEdit.addAction(self.actionCut_Ctrl_X)
        self.menuEdit.addAction(self.actionCopy_Ctrl_C)
        self.menuEdit.addAction(self.actionPaste_Ctrl_V)
        self.menuEdit.addAction(self.actionUndo_Ctrl_Z)
        self.menuEdit.addAction(self.actionRedo_Ctrl_Y)
        self.menuEdit.addAction(self.actionIndent)
        self.menuEdit.addAction(self.actionUnIndent_Shift_Tab)
        self.menuEdit.addAction(self.actionLine_Cut)
        self.menuEdit.addAction(self.actionLine_Copy)
        self.menuEdit.addAction(self.actionLine_Paste)
        self.menuEdit.addAction(self.actionLine_Transpose)
        self.menuEdit.addAction(self.actionLine_Duplicate)
        self.menuEdit.addAction(self.actionComment_Uncomment_Ctrl)
        self.menuFind.addAction(self.actionFind)
        self.menuFind.addAction(self.actionFind_All_Ctrl_Shift_F)
        self.menuFind.addAction(self.actionReplace_Ctrl_R)
        self.menuFind.addAction(self.actionReplace_All_Ctrl_Shift_R)
        self.menuFind.addAction(self.actionGoto_Line_Ctrl_G)
        self.menuFind.addAction(self.actionHighlight_Ctrl_M)
        self.menuFind.addAction(self.actionUpperCase_Alt_U)
        self.menuFind.addAction(self.actionLowerCase_Alt_L)
        self.menuFind.addAction(self.actionCamelCase_Alt_C)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuFind.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "untitled"))
        self.findButton.setText(_translate("MainWindow", "Find"))
        self.findAllButton.setText(_translate("MainWindow", "Find All"))
        self.replaceButton.setText(_translate("MainWindow", "Replace"))
        self.replaceAllButton.setText(_translate("MainWindow", "Replace All"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuFind.setTitle(_translate("MainWindow", "Find"))
        self.actionCtrl_N.setText(_translate("MainWindow", "Ctrl+N"))
        self.actionNew_Ctrl_N.setText(_translate("MainWindow", "New                Ctrl+N"))
        self.actionOpen_Ctrl_O.setText(_translate("MainWindow", "Open              Ctrl+O"))
        self.actionExit_Alt_F4.setText(_translate("MainWindow", "Exit                  Alt+F4"))
        self.actionClose_Tab_Ctrl_W.setText(_translate("MainWindow", "Close Tab        Ctrl+W"))
        self.actionClose_All_Tab.setText(_translate("MainWindow", "Close All Tab"))
        self.actionSave_Ctrl_S.setText(_translate("MainWindow", "Save                Ctrl+S"))
        self.actionSave_As.setText(_translate("MainWindow", "Save As"))
        self.actionRecent.setText(_translate("MainWindow", "Recent"))
        self.actionCut_Ctrl_X.setText(_translate("MainWindow", "Cut                Ctrl+X"))
        self.actionCopy_Ctrl_C.setText(_translate("MainWindow", "Copy             Ctrl+C"))
        self.actionPaste_Ctrl_V.setText(_translate("MainWindow", "Paste             Ctrl+V"))
        self.actionUndo_Ctrl_Z.setText(_translate("MainWindow", "Undo            Ctrl+Z"))
        self.actionRedo_Ctrl_Y.setText(_translate("MainWindow", "Redo             Ctrl+Y"))
        self.actionIndent.setText(_translate("MainWindow", "Indent           Tab"))
        self.actionUnIndent_Shift_Tab.setText(_translate("MainWindow", "UnIndent      Shift+Tab"))
        self.actionLine_Cut.setText(_translate("MainWindow", "Line Cut        Ctrl+L"))
        self.actionLine_Copy.setText(_translate("MainWindow", "Line Copy     Ctrl+Shift+T"))
        self.actionLine_Paste.setText(_translate("MainWindow", "Line Paste     Ctrl+Shift+L"))
        self.actionLine_Duplicate.setText(_translate("MainWindow", "Line Duplicate       Ctrl+D"))
        self.actionLine_Transpose.setText(_translate("MainWindow", "Line Transpose      Ctrl+T"))
        self.actionComment_Uncomment_Ctrl.setText(_translate("MainWindow", "Comment/Uncomment    Ctrl+/"))
        self.actionGoto_Line_Ctrl_G.setText(_translate("MainWindow", "Goto Line        Ctrl+G"))
        self.actionHighlight_Ctrl_M.setText(_translate("MainWindow", "Highlight        Ctrl+M"))
        self.actionUpperCase_Alt_U.setText(_translate("MainWindow", "UpperCase       Alt+U"))
        self.actionLowerCase_Alt_L.setText(_translate("MainWindow", "LowerCase      Alt+L"))
        self.actionCamelCase_Alt_C.setText(_translate("MainWindow", "CamelCase     Alt+C"))
        self.actionFind.setText(_translate("MainWindow", "Find             Ctrl+F"))
        self.actionFind_All_Ctrl_Shift_F.setText(_translate("MainWindow", "Find All     Ctrl+Shift+F"))
        self.actionReplace_Ctrl_R.setText(_translate("MainWindow", "Replace        Ctrl+R"))
        self.actionReplace_All_Ctrl_Shift_R.setText(_translate("MainWindow", "Replace All      Ctrl+Shift+R"))

from scriptEditor.directoryTreeView import DirectoryTree
from scriptEditor.editor import CustomTab, EditorWidget
from scriptEditor.interpreterWidget import EmbedIPython

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

